<h2 class="mb-4 text-center">📦 Manage Items</h2>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow-sm border-0 rounded-4 mb-4">
            <div class="card-body">
                <h5 class="card-title text-center mb-3">Add / Edit Item</h5>
                <form id="itemForm">
                    <input type="hidden" id="itemId" />

                    <div class="mb-3">
                        <label for="itemName" class="form-label">Item Name</label>
                        <input type="text" class="form-control" id="itemName" placeholder="Enter item name" required />
                    </div>

                    <div class="mb-3">
                        <label for="itemPrice" class="form-label">Item Price</label>
                        <input type="number" class="form-control" step="0.01" id="itemPrice" placeholder="Enter item price" required />
                    </div>

                    <button type="button" id="btnItemSave" class="btn btn-primary w-100" onclick="insertItem()">Save</button>
                </form>
                <div id="itemMessage" class="mt-3 text-center fw-semibold"></div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm border-0 rounded-4">
    <div class="card-body">
        <h5 class="card-title mb-3">Item List</h5>
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th style="width: 400px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Price</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-warning me-1"
                                            onclick="editItem(@item.Id,'@item.Name',@item.Price)">
                                        Edit
                                    </button>
                                    <button type="button" class="btn btn-sm btn-danger me-1"
                                            onclick="deleteItem(@item.Id)">
                                        Delete
                                    </button>
                                    <button type="button" class="btn btn-sm btn-success"
                                            onclick="addToCart(@item.Id)">
                                        Add To Cart
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center text-muted">No items available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    async function insertItem() {
        const name = document.getElementById('itemName').value;
        const price = document.getElementById('itemPrice').value;
        try {
            const response = await fetch('/Item/InsertItem', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, price })
            });

            const result = await response.json();
            showMessage(result.message, result.success);

            if (result.success) {
                setTimeout(() => location.reload(), 800);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    function editItem(id, name, price) {
        document.getElementById('itemId').value = id;
        document.getElementById('itemName').value = name;
        document.getElementById('itemPrice').value = price;
        const btn = document.getElementById('btnItemSave');
        btn.onclick = updateItem;
        btn.innerText = "Update";
        btn.classList.remove("btn-primary");
        btn.classList.add("btn-warning");
    }

    async function updateItem() {
        const id = document.getElementById('itemId').value;
        const name = document.getElementById('itemName').value;
        const price = document.getElementById('itemPrice').value;
        try {
            const response = await fetch('/Item/UpdateItem', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id, name, price })
            });

            const result = await response.json();
            showMessage(result.message, result.success);

            if (result.success) {
                setTimeout(() => location.reload(), 800);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function deleteItem(id) {
        try {
            const response = await fetch('/Item/DeleteItem?id=' + id, {
                method: 'POST'
            });

            const result = await response.json();
            showMessage(result.message, result.success);

            if (result.success) {
                setTimeout(() => location.reload(), 800);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function addToCart(itemId) {
        try {
            const response = await fetch('/Cart/AddToCart?itemId=' + itemId, {
                method: 'POST'
            });

            const result = await response.json();
            showMessage(result.message, result.success);

            if (result.success) {
                setTimeout(() => location.reload(), 800);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    function showMessage(message, success) {
        const msgBox = document.getElementById('itemMessage');
        msgBox.innerText = message;
        msgBox.classList.remove("text-danger", "text-success");
        msgBox.classList.add(success ? "text-success" : "text-danger");
    }

    window.onload = function () {
        document.getElementById('itemName')?.focus();
    }
</script>
