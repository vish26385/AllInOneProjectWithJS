@model List<AllInOneProject.DTOs.ItemDto>

<h2 class="mb-4">Your Cart</h2>

<div class="container my-4">
    <div class="row">
        <div class="col-lg-8">
            <div class="notification" id="cartMessage"></div>

            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Price</td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-sm btn-warning me-1"
                                            onclick="removeFromCart(@item.Id, this)">
                                        Remove
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center text-muted py-3"><i class="bi bi-info-circle"></i> Your cart is empty.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Cart Summary Section -->
        <div class="col-lg-4 mt-4 mt-lg-0">
            <div class="card shadow-sm border-success">
                <div class="card-header bg-success text-white">
                    <h6 class="mb-0"><i class="bi bi-cash-coin"></i> Order Summary</h6>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.Count > 0)
                    {
                        var totalAmount = Model?.Sum(i => i.Price) ?? 0;
                        <ul class="list-group mb-3">
                            @foreach (var item in Model)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @item.Name
                                    <span class="text-success fw-semibold">₹@item.Price</span>
                                </li>
                            }
                        </ul>
                        <h5 class="d-flex justify-content-between">
                            <span>Total:</span>
                            <span class="text-success fw-bold">
                                ₹@totalAmount
                            </span>
                        </h5>
                        <form asp-controller="Cart" asp-action="Checkout" method="post">
                            <div class="d-grid mt-3">
                                <button class="btn btn-primary">
                                    <i class="bi bi-credit-card"></i> Place Order
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <p class="text-muted">No items to summarize.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    async function removeFromCart(itemId, btn) {
        try {
            const response = await fetch('/Cart/RemoveFromCart?itemId=' + itemId, {
                method: 'POST'
            });

            // 🔹 Handle not logged in (401 Unauthorized)
            if (response.status === 401) {
                showMessage("Please login first", false);
                window.location.href = "/Auth/Login";
                return;
            }

            // 🔹 Handle server errors
            if (!response.ok) {
                const text = await response.text();
                console.error("Server error:", text);
                showMessage("Insert failed", false);
                return;
            }

            const result = await response.json();

            const msgBox = document.getElementById('cartMessage');
              msgBox.innerText = result.message;

              // background color based on success/failure
              msgBox.style.backgroundColor = result.success ? "#4BB543" : "#DC3545";

              // trigger animation
              msgBox.classList.remove("show");
              void msgBox.offsetWidth; // reflow hack to restart animation
              msgBox.classList.add("show");

              // auto hide after 2s
              setTimeout(() => {
                  msgBox.classList.remove("show");
              }, 2000);

            if (result.success) {
                const row = btn.closest('tr');
                if (row) row.remove();

                setTimeout(() => {
                    window.location.href = '/Cart/Cart';
                }, 1000);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
